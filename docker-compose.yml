version: '3.7'

services:
          setup:
            build:
              context: setup/
              args:
                ELK_VERSION: ${ELK_VERSION}
            init: true
            volumes:
              - setup:/state:Z
            environment:
              ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
              KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
            networks:
              - elk

          elasticsearch:
            build:
              context: elasticsearch/
              args:
                ELK_VERSION: $ELK_VERSION
            volumes:
              - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,z
              - "./elasticsearch/roles.yml:/usr/share/elasticsearch/config/roles.yml"
              - "./elasticsearch/users:/usr/share/elasticsearch/config/users"
              - "./elasticsearch/users_roles:/usr/share/elasticsearch/config/users_roles"
              - "./elasticsearch/service_tokens:/usr/share/elasticsearch/config/service_tokens"
            ports:
              - "9200:9200"
              - "9300:9300"
            environment:
              ES_JAVA_OPTS: "-Xmx512m -Xms512m"
              ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
              discovery.type: single-node
            networks:
              - elk
            healthcheck:
                interval: 20s
                retries: 10
                test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=500ms"]

          kibana:
            build:
              context: kibana/
              args:
                ELK_VERSION: $ELK_VERSION
            volumes:
              - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z
            ports:
              - "5601:5601"
            networks:
              - elk
            environment:
              ELASTICSEARCH_HOSTS: http://elasticsearch:9200
              ELASTICSEARCH_USERNAME: "${KIBANA_ES_USER:-kibana_system_user}"
              ELASTICSEARCH_PASSWORD: "${KIBANA_ES_PASS:-changeme}"
              STATUS_ALLOWANONYMOUS: 'true'
              KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
            depends_on:
              - elasticsearch
            healthcheck:
                interval: 10s
                retries: 20
                test: ["CMD-SHELL", "curl -s http://localhost:5601/api/status | grep -q 'All services are available'"]

          fleet-server:
            build:
              context: fleet/
              args:
                ELK_VERSION: $ELK_VERSION
            privileged: true
            command:
                - "-l"
                - "-c"
                - "elastic-agent container"
            ports:
                - "8200:8200"
            environment:
                FLEET_ELASTICSEARCH_HOST: "http://elasticsearch:9200"
                FLEET_SERVER_ENABLE: "1"
                FLEET_SERVER_HOST: "0.0.0.0"
                FLEET_SERVER_POLICY_ID: "${FLEET_SERVER_POLICY_ID:-fleet-server-apm-policy}"
                FLEET_SERVER_PORT: "8220"
                KIBANA_FLEET_HOST: "http://kibana:5601"
                KIBANA_FLEET_SETUP: "1"
                FLEET_SERVER_INSECURE_HTTP: "1"
                FLEET_SERVER_ELASTICSEARCH_INSECURE: "1"
                FLEET_SERVER_SERVICE_TOKEN: AAEAAWVsYXN0aWMvZmxlZXQtc2VydmVyL2VsYXN0aWMtcGFja2FnZS1mbGVldC1zZXJ2ZXItdG9rZW46bmgtcFhoQzRRQ2FXbms2U0JySGlWQQ
                KIBANA_FLEET_SERVICE_TOKEN: AAEAAWVsYXN0aWMvZmxlZXQtc2VydmVyL2VsYXN0aWMtcGFja2FnZS1mbGVldC1zZXJ2ZXItdG9rZW46bmgtcFhoQzRRQ2FXbms2U0JySGlWQQ
            networks:
              - elk
            depends_on:
              elasticsearch:
                condition: service_healthy
              kibana:
                condition: service_healthy

networks:
  elk:
    driver: bridge

volumes:
  setup:
  elasticsearch:
          # apm-server:
          #   build:
          #     context: apm-server/
          #     args:
          #       ELK_VERSION: $ELK_VERSION
          #   ports:
          #     - 8200:8200
          #   networks:
          #     - elk
          #   depends_on:
          #     - elasticsearch
          #     - kibana
          #   command: >
          #     apm-server -e
          #       -E apm-server.rum.enabled=true
          #       -E setup.kibana.host=kibana:5601
          #       -E setup.template.settings.index.number_of_replicas=0
          #       -E apm-server.kibana.enabled=true
          #       -E apm-server.kibana.host=kibana:5601
          #       -E apm-server.kibana.username=kibana_system
          #       -E apm-server.kibana.password=${KIBANA_SYSTEM_PASSWORD:-}
          #       -E output.elasticsearch.hosts=["elasticsearch:9200"]
          #       -E output.elasticsearch.username=elastic
          #       -E output.elasticsearch.password=${ELASTIC_PASSWORD:-}
            # healthcheck:
            #   interval: 10s
            #   retries: 12
            #   test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://apm-server:8200/


